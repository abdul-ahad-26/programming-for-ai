View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse(Attendance_Percentage > 90, TRUE, FALSE )) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score = 230) & Attendance_Percentage > 90, TRUE, FALSE )) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score = 230) & (Attendance_Percentage > 90), TRUE, FALSE )) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & (Attendance_Percentage > 90), TRUE, FALSE )) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & (Attendance_Percentage > 90))) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & (Attendance_Percentage > 90), TRUE)) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse(Total_Score > 230 | Total_Score == 230 & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID))
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID))
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise())
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise() %>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID) %>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID) %>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID) %>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID) )%>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = count(Student_ID) )%>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = nrow(Student_ID) )%>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = nrow(Student_ID) )%>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n(Student_ID) )%>% View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% View()
library(ggplot2)
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>%
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>%
geom_boxplot(outlier.colour="black", outlier.shape=16,
outlier.size=2, notch=FALSE)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>%
ggplot( mapping=aes(x=label, y=temperature))+geom_boxplot()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% reframe(Total_Score)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% reframe(Total_Score) %>%
ggplot( mapping=aes(x=label, y=temperature))+geom_boxplot()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% reframe(Total_Score)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% reframe(Total_Score) %>% View()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% View()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% View()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% geom_boxplot()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% geom_boxplot(aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8,
size = 2, color = "white")
,
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(ds, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8,
size = 2, color = "white")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(ds, aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8,
size = 2, color = "white")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot( aes(x = label, y = temperature, fill = label)) +
geom_boxplot() +
stat_summary(fun = "mean", geom = "point", shape = 8,
size = 2, color = "white")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% View()
# 2. Boxplot comparing Total_Score across Gender
library(ggplot2)
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(data=ds, mapping=aes(x=label, y=temperature))+geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=label, y=temperature))+geom_boxplot()
data1 %>% group_by(Gender) %>% reframe(Total_Score) %>% ggplot(mapping=aes(x=label, y=temperature))+geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% +geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score+geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score+geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()
# 4. Line chart showing average Total_Score by Attendance_Percentage bins (use cut() to bin attendance)
plot(data1$Study_Hours_Per_Week, data1$Total_Score, col = ifelse(data1$Passed == "Yes", "blue", "red"), pch = 19, xlab = "Study Hours Per Week", ylab = "Total Score", main = "Study Hours vs Total Score")
ggplot(data1, aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) +
geom_point() +
labs(title = "Study Hours vs Total Score", x = "Study Hours Per Week", y = "Total Score") +
theme_minimal()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()
data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by=10)))
data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by=10)))
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by=10)))
data1 <- data1 %>%
mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
library(tidyverse)
library(ggplot2)
data1 <- data1 %>%
mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 <- data1 %>%
mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10))) %>% View()
data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10))) %>% View()
data <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage), breaks = seq(0, 100, by = 10))) %>% View()
data <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 <- data1 %>%
mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
data1 %>% View()
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 3. Create a new column Performance_Level
data1 <- data1 %>% mutate(Performance_Level = ifelse(Total_Score >= 240, "Excelent",
ifelse(Total_Score >= 200 ,"Good",
ifelse(Total_Score >= 150 , "Average","Poor"))))
library(tidyverse)
library(ggplot2)
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
library(tidyverse)
library(ggplot2)
# Part A: Data Preparation ----
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 3. Create a new column Performance_Level
data1 <- data1 %>% mutate(Performance_Level = ifelse(Total_Score >= 240, "Excelent",
ifelse(Total_Score >= 200 ,"Good",
ifelse(Total_Score >= 150 , "Average","Poor"))))
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
View(cleaned_data)
View(cleaned_dataset)
View(data)
data %>% View()
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
data1 %>% View()
data1 %>% View()
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data1$Passed != "nan" & data1$Remarks != "nan", ]
data1 <- data[data$Passed != "nan" & data$Remarks != "nan", ]
data1 %>% View()
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 3. Create a new column Performance_Level
data1 <- data1 %>% mutate(Performance_Level = ifelse(Total_Score >= 240, "Excelent",
ifelse(Total_Score >= 200 ,"Good",
ifelse(Total_Score >= 150 , "Average","Poor"))))
# 3. Create a new column Performance_Level
data1 <- data1 %>% mutate(Performance_Level = ifelse(Total_Score >= 240, "Excelent",
ifelse(Total_Score >= 200 ,"Good",
ifelse(Total_Score >= 150 , "Average","Poor"))))
# 1. Count how many students fall into each Performance_Level.
data1 %>%  count(Performance_Level)
# 2. Compute the average Study_Hours_Per_Week and Attendance_Percentage for each performance level.
data1 %>% select(Study_Hours_Per_Week, Attendance_Percentage, Performance_Level) %>%
group_by(Performance_Level) %>%
summarise(Average_Study_Hours_Per_Week = mean(Study_Hours_Per_Week),Average_Attendance_Percentage = mean(Attendance_Percentage))
# 2. Compute the average Study_Hours_Per_Week and Attendance_Percentage for each performance level.
data1 %>% select(Study_Hours_Per_Week, Attendance_Percentage, Performance_Level) %>%
group_by(Performance_Level) %>%
summarise(Average_Study_Hours_Per_Week = mean(Study_Hours_Per_Week),Average_Attendance_Percentage = mean(Attendance_Percentage))
data1 %>% select(Gender, School_Type, Total_Score, Passed) %>%
group_by(Gender, School_Type) %>%
summarise(Mean_Total_Score = mean(Total_Score), Pass_Percentage = mean(Passed == "Yes") * 100) %>%
View()
# 4. Find the top 5 students with the highest Study_Hours_Per_Week who did not pass.
data1 %>% filter(Passed == "No") %>% arrange(desc(Study_Hours_Per_Week)) %>% head(5)
data1 <- data1 %>%  mutate(Study_Efficiency = Total_Score / Study_Hours_Per_Week) %>%
filter(Study_Efficiency < 10 & Passed == "Yes" )
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_s
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score))
data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score)) %>% View9
data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score)) %>% View()
ggplot(attendance_summary, aes(x =Attendance_Bin, y = Mean_Total_Score, group =1 ))
attendance_summary <- data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score)) %>% View()
ggplot(attendance_summary, aes(x =Attendance_Bin, y = Mean_Total_Score, group =1 ))
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group =1 ))
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group =1 )) +
+
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
rlang::last_trace()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group =1 )) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
attendance_summary <- data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score)) %>% View()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
library(dplyr)
library(ggplot2)
# 1. Create attendance bins
data1 <- data1 %>%
mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
# 2. Group by Attendance_Bin and calculate mean Total_Score
attendance_summary <- data1 %>%
group_by(Attendance_Bin) %>%
summarise(Mean_Total_Score = mean(Total_Score, na.rm = TRUE))
# 3. Plot the line chart
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
attendance_summary <- data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score, na.rm = TRUE))
attendance_summary <- data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score, na.rm = TRUE))
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score")
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_s
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_segment()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score)
# 2. Boxplot comparing Total_Score across Gender
data1 %>% group_by(Gender) %>% summarise(Total_Score) %>% View()
# 2. Boxplot comparing Total_Score across Gender
data1 %>%  ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
# 2. Boxplot comparing Total_Score across Gender
data1 %>%  ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
data1 %>% ggplot(aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) + geom_point()  +
labs(title = "Study Hours vs Total Score", x = "Study Hours Per Week", y = "Total Score") +
theme_minimal()
data1 %>% View()
data1 %>%  mutate(Study_Efficiency = Total_Score / Study_Hours_Per_Week) %>%
filter(Study_Efficiency < 10 & Passed == "Yes" )
library(tidyverse)
library(ggplot2)
# Part A: Data Preparation ----
# 1. Load dataset and remove rows with missing Remarks or Passed values
data <- read_csv('student_performance.csv')
data1 <- data[data$Passed != "nan" & data$Remarks != "nan", ]
# 2. Create a new column Total_Score (sum of three subject scores)
data1 <- data1 %>% mutate(Total_Score = English_Score + Science_Score + Math_Score)
# 3. Create a new column Performance_Level
data1 <- data1 %>% mutate(Performance_Level = ifelse(Total_Score >= 240, "Excelent",
ifelse(Total_Score >= 200 ,"Good",
ifelse(Total_Score >= 150 , "Average","Poor"))))
# Part B: Data Analysis ----
# 1. Count how many students fall into each Performance_Level.
data1 %>%  count(Performance_Level)
# 2. Compute the average Study_Hours_Per_Week and Attendance_Percentage for each performance level.
data1 %>% select(Study_Hours_Per_Week, Attendance_Percentage, Performance_Level) %>%
group_by(Performance_Level) %>%
summarise(Average_Study_Hours_Per_Week = mean(Study_Hours_Per_Week),Average_Attendance_Percentage = mean(Attendance_Percentage))
# 3. Group by Gender and School_Type, and compute:
#     o Mean Total_Score
#     o Pass percentage (Passed == "Yes")
data1 %>% select(Gender, School_Type, Total_Score, Passed) %>%
group_by(Gender, School_Type) %>%
summarise(Mean_Total_Score = mean(Total_Score), Pass_Percentage = mean(Passed == "Yes") * 100) %>%
View()
# 4. Find the top 5 students with the highest Study_Hours_Per_Week who did not pass.
data1 %>% filter(Passed == "No") %>% arrange(desc(Study_Hours_Per_Week)) %>% head(5)
# Part C: Conditional and Logical Operations ----
# 1. Create a new column Study_Efficiency:
#     Study_Efficiency = Total_Score / Study_Hours_Per_Week
#     Filter students with Study_Efficiency < 10 and Passed == "Yes".
data1 %>%  mutate(Study_Efficiency = Total_Score / Study_Hours_Per_Week) %>%
filter(Study_Efficiency < 10 & Passed == "Yes" )
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
# Part D: Data Visualization ----
#   Using ggplot2:
# 1. Bar chart showing number of students in each Performance_Level
data1 %>% group_by(Performance_Level) %>% summarise(Number_of_Students = n() )%>% ggplot(aes(x=Performance_Level, y=Number_of_Students)) +
geom_bar(stat = "identity")
# 2. Boxplot comparing Total_Score across Gender
data1 %>%  ggplot(mapping=aes(x=Gender, y=Total_Score))+geom_boxplot()
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
ggplot(data1, aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) +
geom_point() +
labs(title = "Study Hours vs Total Score", x = "Study Hours Per Week", y = "Total Score") +
theme_minimal()
data1 %>% View()
# 4. Line chart showing average Total_Score by Attendance_Percentage bins (use cut() to bin attendance)
data1 <- data1 %>% mutate(Attendance_Bin = cut(Attendance_Percentage, breaks = seq(0, 100, by = 10)))
attendance_summary <- data1 %>% group_by(Attendance_Bin) %>% summarise(Mean_Total_Score = mean(Total_Score, na.rm = TRUE))
ggplot(attendance_summary, aes(x = Attendance_Bin, y = Mean_Total_Score, group = 1)) +
geom_line() +
geom_point() +
labs(title = "Average Total Score by Attendance Percentage",
x = "Attendance Percentage Bins",
y = "Average Total Score") +
theme_minimal()
# Questions: ----
#  Are high study hours always linked to passing?
No
# 3. Scatter plot of Study_Hours_Per_Week vs Total_Score, colored by Passed
ggplot(data1, aes(x = Study_Hours_Per_Week, y = Total_Score, color = Passed)) +
geom_point() +
labs(title = "Study Hours vs Total Score", x = "Study Hours Per Week", y = "Total Score") +
theme_minimal()
# Do school type and gender impact overall performance?
data1
# Do school type and gender impact overall performance?
data1 %>% group_by(School_Type, Gender)
# Do school type and gender impact overall performance?
data1 %>% group_by(School_Type, Gender) %>%  summarise(Total_Score)
# Do school type and gender impact overall performance?
data1 %>% group_by(School_Type, Gender) %>%  summarise(Mean_Total_Score = mean(Total_Score))
# Do school type and gender impact overall performance?
data1 %>% group_by(School_Type, Gender) %>%  summarise(Mean_Total_Score = mean(Total_Score)) %>% View()
# Do school type and gender impact overall performance?
data1 %>% group_by(School_Type, Gender) %>%  summarise(Mean_Total_Score = mean(Total_Score, na.rm = TRUE)) %>% View()
ggplot(data1, aes(x = interaction(Gender, School_Type), y = Total_Score, fill = Gender)) +
geom_boxplot() +
labs(title = "Total Score by Gender and School Type", x = "Gender and School Type", y = "Total Score") +
theme_minimal()
data1 %>% ggplot(aes)
data1 %>% ggplot(aes(x= interaction(Gender, School_Type), y= Total_Score, fill= Gender)) + geom_boxplot() + labs(title = "Total score by Gender and School Type", x = "Gender and School Type", y = "Total Score") + theme_minimal(())
data1 %>% ggplot(aes(x= interaction(Gender, School_Type), y= Total_Score, fill= Gender)) + geom_boxplot() + labs(title = "Total score by Gender and School Type", x = "Gender and School Type", y = "Total Score") + theme_minimal(
data1 %>% ggplot(aes(x= interaction(Gender, School_Type), y= Total_Score, fill= Gender)) + geom_boxplot() + labs(title = "Total score by Gender and School Type", x = "Gender and School Type", y = "Total Score") + theme_minimal()
data1 %>% ggplot(aes(x= interaction(Gender, School_Type), y= Total_Score, fill= Gender)) + geom_boxplot() + labs(title = "Total score by Gender and School Type", x = "Gender and School Type", y = "Total Score") + theme_minimal()
# Which factors best predict scholarship eligibility?
data1 %>% ggplot(aes(x= interaction(Gender, School_Type), y= Total_Score, fill= Gender)) + geom_boxplot() + labs(title = "Total score by Gender and School Type", x = "Gender and School Type", y = "Total Score") + theme_minimal()
result <- aov(Total_Score ~ Gender * School_Type, data = data1)
summary(result)
result <- aov(Total_Score ~ Gender * School_Type, data = data1)
summary(result)
# 2. Add a column Eligible_for_Scholarship:
#     o TRUE if Total_Score ≥ 230 and Attendance_Percentage > 90, else FALSE
data1 %>% mutate(Eligible_for_Scholarship = ifelse((Total_Score > 230 | Total_Score == 230) & Attendance_Percentage > 90, TRUE, FALSE)) %>%
View()
